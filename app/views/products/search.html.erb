<div class="page-header" id="banner">
  <div class="row">
    <div class="col-lg-12 col-md-12">
      <h3>商品情報を取得</h3>
        <button id="run_search" class="btn btn-primary" style="margin-right: 20px;">取得開始</button>
        <button id="update_data" class="btn btn-primary" style="margin-right: 20px;">データ更新</button>
        <button id="delete_data" class="btn btn-primary" style="margin-right: 20px;">一括削除</button>
        <button id="csv_download" class="btn btn-info" style="margin-right: 20px;">CSVダウンロード</button>
        <a style="display:none;" id="downloader" href="#"></a>
      <div><br></div>
      <div id="result_table"></div>
    </div>
  </div>
</div>

<script>
  $(document).ready(function(){
    // create table for ASIN
    var convh = {
      "asin": "ASIN",
      "new_sale1" : "新品過去1ヶ月",
      "new_sale2" : "新品過去2ヶ月",
      "new_sale3" : "新品過去3ヶ月",
      "new_avg3" : "新品3ヶ月平均",
      "used_sale1" : "中古過去1ヶ月",
      "used_sale2" : "中古過去2ヶ月",
      "used_sale3" : "中古過去3ヶ月",
      "used_avg3" : "中古3ヶ月平均",
      "check1" : "チェック1",
      "cart_price" : "カート価格",
      "cart_income" : "カート入金",
      "used_price" : "中古最安値",
      "used_income" : "中古入金",
      "check2" : "チェック2",
      "title" : "商品名",
      "mpn" : "型番",
      "item_image" : "商品画像",
      "check3" : "チェック3",
      "new_bid_price" : "新品入札価格",
      "used_bid_price" : "中古入札価格",
      "new_negotiate_price" : "新品交渉価格",
      "used_negotiate_price" : "中古交渉価格"
    }
    var cheaders = [];
    var cwidth = [];
    var mydata = [];
    var colOption = [];
    <% data = Array.new %>
    <% jj = 0 %>
    <% @header.each_with_index do |name, i| %>
        cheaders.push(convh["<%= name %>"]);
        cwidth.push(120);
        <% if i == 9 || i == 14 || i == 18 then %>
          colOption.push({className: "htCenter htMiddle", type:"checkbox", uncheckedTemplate: null});
        <% elsif i == 17 then %>
          colOption.push({className: "htCenter htMiddle", renderer: 'html'});
        <% else %>
          colOption.push({className: "htCenter htMiddle"});
        <% end %>
        <% data.push(@products.pluck(name)) %>

    <% end %>

    cwidth[9] = 90;
    cwidth[10] = 90;
    cwidth[11] = 90;
    cwidth[12] = 90;
    cwidth[13] = 90;
    cwidth[14] = 90;
    cwidth[15] = 280;
    cwidth[17] = 100;
    <% data = data.transpose %>

    var maxColnum = cheaders.length;
    var maxRownum = 5000;
    var limit = <%= @limit %>;
    if(limit != null){
      if(maxRownum < limit){
        maxRownum = limit;
      }
    }

    <% data.each_with_index do |row, ii| %>
      mydata[<%= ii %>] = [];
      <% row.each_with_index do |col, jj| %>
        mydata[<%= ii %>][<%= jj %>] = "<%= col %>";
        <% if jj == 17 then %>
          mydata[<%= ii %>][<%= jj %>] = '<img src="<%= col %>" height="40" >';
        <% end %>
      <% end %>
    <% end %>

    for(var k = <%= data.length %>; k < <%= data.length %> + 5000; k++){
      mydata[k] = [];
      for(var m = 0; m < cheaders.length; m++){
        mydata[k][m] = "";
      }
    }

    var container = document.getElementById('result_table');
    var handsontable = new Handsontable(container, {
      /* オプション */
      width: 2100,
      height: 1020,
      contextMenu: true,
      data: mydata,
      rowHeaders: true,
      colHeaders: cheaders,
      maxCols: maxColnum,
      maxRows: maxRownum,
      manualColumnResize: true,
      autoColumnSize: false,
      colWidths: cwidth,
      rowHeights: 60,
      wordWrap: false,
      columnSorting: true,
      columns: colOption
    });

    $("#update_data").click(function () {
      alert("record");
      var body = handsontable.getData();
      var head = convh;
      body = JSON.stringify(body);
      head = JSON.stringify(head);
      var myData = {data: body, header: head};
      $.ajax({
        url: "/products/record",
        type: "POST",
        data: myData,
        dataType: "json",
        success: function (result) {
          //mydata[rnum] = result;
          console.log("start");
          var cheaders = Object.keys(convh);
          var temp = [];
          alert("Update");
        },
        error: function () {
          alert("NG");
        }
      });

    });

    $("#run_search").click(function () {
      alert("Start");
      var body = handsontable.getData();
      body = JSON.stringify(body);
      var rnum = 0;
      repeat(rnum);
    });

    function repeat(rnum){
      //var org = handsontable.getData();
      var org = handsontable.getDataAtRow(rnum);
      body = JSON.stringify(org);
      //var myData = {data: body, rnum: rnum};
      var myData = {data: body};

      $.ajax({
        url: "/products/get",
        type: "POST",
        data: myData,
        dataType: "json",
        success: function (result) {
          //mydata[rnum] = result;
          console.log("start");
          var cheaders = Object.keys(convh);
          var temp = [];
          console.log(result);
          for(var k = 0; k < cheaders.length; k++){
            console.log(cheaders[k]);
            console.log(result[cheaders[k]]);
            temp[k] = [];
            if(cheaders[k] == "item_image"){
              temp[k] = [rnum, k, '<img src="' + result[cheaders[k]] + '" height="40">'];
            }else{
              temp[k] = [rnum, k, result[cheaders[k]]];
            }
          }
          console.log("===========");
          console.log(rnum);
          handsontable.setDataAtCell(temp);
          handsontable.render();
          console.log("end");
          rnum++;
          org = handsontable.getDataAtRow(rnum);
          if(org[0] == ""){
            alert("End");
            return;
          }
          repeat(rnum);
        },
        error: function () {
          alert("NG");
        }
      });
    };

    var em = [];
    for(var p = 0; p < maxColnum; p++){
      em.push("");
    }

    $("#add_row").click(function () {
      alert("行を追加します");
      var body = handsontable.getData();
      var mr = body.length;
      for(var j = 0; j < 100; j++){
        body[mr + j] = em;
      }
      handsontable.loadData(body);
      handsontable.render();
    });

    $("#delete_data").click(function () {

      var myData = {data: "delete"};

      $.ajax({
        url: "/products/delete",
        type: "POST",
        data: myData,
        dataType: "json",
        success: function () {
          location.reload();
          alert("削除成功");

        },
        error: function () {
          alert("NG");
        }
      });
    });

    $("#csv_download").click(function () {
      var array_data = handsontable.getData();
      // BOM の用意（文字化け対策）
      var bom = new Uint8Array([0xEF, 0xBB, 0xBF]);
      // CSV データの用意
      var csv_data = array_data.map(function(l){return l.join(',')}).join('\r\n');
      var blob = new Blob([bom, csv_data], { type: 'text/csv' });
      var url = (window.URL || window.webkitURL).createObjectURL(blob);
      var a = document.getElementById('downloader');
      a.download = 'data.csv';
      a.href = url;
      // ダウンロードリンクをクリックする
      $('#downloader')[0].click();
    });

  });
</script>
